# Makefile.in generated by automake 1.12.6 from Makefile.am.
# src/gtk/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2012 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.






am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/VisualBoyAdvance
pkgincludedir = $(includedir)/VisualBoyAdvance
pkglibdir = $(libdir)/VisualBoyAdvance
pkglibexecdir = $(libexecdir)/VisualBoyAdvance
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-pc-none
target_triplet = arm-unknown-none
bin_PROGRAMS = gvba$(EXEEXT)
subdir = src/gtk
DIST_COMMON = $(dist_pkgdata_DATA) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(top_srcdir)/depcomp \
	$(top_srcdir)/mkinstalldirs
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/gettext.m4 \
	$(top_srcdir)/m4/iconv.m4 $(top_srcdir)/m4/lib-ld.m4 \
	$(top_srcdir)/m4/lib-link.m4 $(top_srcdir)/m4/lib-prefix.m4 \
	$(top_srcdir)/m4/nls.m4 $(top_srcdir)/m4/po.m4 \
	$(top_srcdir)/m4/progtest.m4 $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
AR = ar
ARFLAGS = cru
libgba_a_AR = $(AR) $(ARFLAGS)
libgba_a_LIBADD =
am_libgba_a_OBJECTS = libgba_a-2xSaI.$(OBJEXT) \
	libgba_a-Cheats.$(OBJEXT) libgba_a-EEprom.$(OBJEXT) \
	libgba_a-Flash.$(OBJEXT) libgba_a-GBA.$(OBJEXT) \
	libgba_a-Gfx.$(OBJEXT) libgba_a-Globals.$(OBJEXT) \
	libgba_a-Mode0.$(OBJEXT) libgba_a-Mode1.$(OBJEXT) \
	libgba_a-Mode2.$(OBJEXT) libgba_a-Mode3.$(OBJEXT) \
	libgba_a-Mode4.$(OBJEXT) libgba_a-Mode5.$(OBJEXT) \
	libgba_a-RTC.$(OBJEXT) libgba_a-Sound.$(OBJEXT) \
	libgba_a-Sram.$(OBJEXT) libgba_a-Text.$(OBJEXT) \
	libgba_a-Util.$(OBJEXT) libgba_a-admame.$(OBJEXT) \
	libgba_a-agbprint.$(OBJEXT) libgba_a-armdis.$(OBJEXT) \
	libgba_a-bilinear.$(OBJEXT) libgba_a-bios.$(OBJEXT) \
	libgba_a-elf.$(OBJEXT) libgba_a-getopt.$(OBJEXT) \
	libgba_a-getopt1.$(OBJEXT) libgba_a-hq2x.$(OBJEXT) \
	libgba_a-interframe.$(OBJEXT) libgba_a-memgzio.$(OBJEXT) \
	libgba_a-motionblur.$(OBJEXT) libgba_a-pixel.$(OBJEXT) \
	libgba_a-remote.$(OBJEXT) libgba_a-scanline.$(OBJEXT) \
	libgba_a-simple2x.$(OBJEXT)
libgba_a_OBJECTS = $(am_libgba_a_OBJECTS)
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(pkgdatadir)"
PROGRAMS = $(bin_PROGRAMS)
am_gvba_OBJECTS = gvba-configfile.$(OBJEXT) gvba-filters.$(OBJEXT) \
	gvba-input.$(OBJEXT) gvba-joypadconfig.$(OBJEXT) \
	gvba-main.$(OBJEXT) gvba-screenarea.$(OBJEXT) \
	gvba-system.$(OBJEXT) gvba-tools.$(OBJEXT) \
	gvba-windowcallbacks.$(OBJEXT) gvba-window.$(OBJEXT)
gvba_OBJECTS = $(am_gvba_OBJECTS)
gvba_LINK = $(CXXLD) $(gvba_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
SOURCES = $(libgba_a_SOURCES) $(gvba_SOURCES)
DIST_SOURCES = $(libgba_a_SOURCES) $(gvba_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
DATA = $(dist_pkgdata_DATA)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \
	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS \
	distdir
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} /tmp/VisualBoyAdvance-1.7.2/missing --run aclocal-1.12
AMTAR = $${TAR-tar}
AUTOCONF = ${SHELL} /tmp/VisualBoyAdvance-1.7.2/missing --run autoconf
AUTOHEADER = ${SHELL} /tmp/VisualBoyAdvance-1.7.2/missing --run autoheader
AUTOMAKE = ${SHELL} /tmp/VisualBoyAdvance-1.7.2/missing --run automake-1.12
AWK = gawk
CC = /usr/bin/arm-unknown-linux-gnueabi-gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = /usr/bin/arm-unknown-linux-gnueabi-gcc -E
CPPFLAGS = 
CXX = /usr/bin/arm-unknown-linux-gnueabi-g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -DC_CORE
CYGPATH_W = cygpath -w
DEFS = -DPACKAGE_NAME=\"\" -DPACKAGE_TARNAME=\"\" -DPACKAGE_VERSION=\"\" -DPACKAGE_STRING=\"\" -DPACKAGE_BUGREPORT=\"\" -DPACKAGE_URL=\"\" -DPACKAGE=\"VisualBoyAdvance\" -DVERSION=\"1.7.2\" -DHAVE_LIBZ=1 -DHAVE_LIBPNG=1 -DHAVE_LIBPTHREAD=1 -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_MALLOC_H=1 -DHAVE_STRINGS_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ARPA_INET_H=1 -DHAVE_NETINET_IN_H=1
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GETTEXT_PACKAGE = 
GMSGFMT = 
GREP = /bin/grep
GTKMM_CFLAGS = 
GTKMM_CPPFLAGS = 
GTKMM_LIBS = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTLLIBS = 
LDFLAGS = 
LEX = flex
LEXLIB = 
LEX_OUTPUT_ROOT = lex.yy
LIBICONV = 
LIBINTL = 
LIBOBJS = 
LIBS = -lpthread -lpng -lz 
LTLIBICONV = 
LTLIBINTL = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /tmp/VisualBoyAdvance-1.7.2/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
MKINSTALLDIRS = 
MSGFMT = 
MSGMERGE = 
NASM = /usr/bin/nasm
OBJEXT = o
PACKAGE = VisualBoyAdvance
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_URL = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PKG_CONFIG = 
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
POSUB = 
RANLIB = ranlib
SDL_CFLAGS = -I/usr/include/SDL -D_GNU_SOURCE=1 -D_REENTRANT
SDL_CONFIG = /usr/bin/sdl-config
SDL_LIBS = -lSDL -lpthread
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
USE_NLS = 
VBA_EXTRA = 
VBA_LIBS = ../gb/libgb.a
VBA_SRC_EXTRA =  sdl
VERSION = 1.7.2
XGETTEXT = 
XMKMF = 
YACC = bison -y
YFLAGS = 
abs_builddir = /tmp/VisualBoyAdvance-1.7.2/src/gtk
abs_srcdir = /tmp/VisualBoyAdvance-1.7.2/src/gtk
abs_top_builddir = /tmp/VisualBoyAdvance-1.7.2
abs_top_srcdir = /tmp/VisualBoyAdvance-1.7.2
ac_ct_CC = 
ac_ct_CXX = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-none
host_alias = x86_64
host_cpu = x86_64
host_os = none
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /tmp/VisualBoyAdvance-1.7.2/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/arm-unknown-linux-gnueabi
program_transform_name = s&^&arm-&
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = arm-unknown-none
target_alias = arm
target_cpu = arm
target_os = none
target_vendor = unknown
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
SUBDIRS = images
noinst_LIBRARIES = libgba.a
gvba_SOURCES = \
	configfile.cpp		\
	configfile.h		\
	filters.cpp		\
	filters.h		\
	input.cpp		\
	input.h			\
	intl.h			\
	joypadconfig.cpp	\
	joypadconfig.h		\
	main.cpp		\
	menuitem.h		\
	screenarea.cpp		\
	screenarea.h		\
	sigccompat.h		\
	system.cpp		\
	tools.cpp		\
	tools.h			\
	windowcallbacks.cpp	\
	window.cpp		\
	window.h

gvba_LDADD = libgba.a ../gb/libgb.a   -lSDL -lpthread -lminizip
gvba_DEPENDENCIES = libgba.a ../gb/libgb.a
gvba_CPPFLAGS = \
	-DPKGDATADIR=\"$(pkgdatadir)\"			\
	-DLOCALEDIR=\"$(datadir)/locale\"		\
	-DGETTEXT_PACKAGE=\"$(GETTEXT_PACKAGE)\"	\
	$(GTKMM_CPPFLAGS)

gvba_CXXFLAGS =  -I/usr/include/SDL -D_GNU_SOURCE=1 -D_REENTRANT
libgba_a_SOURCES = \
	../2xSaI.cpp		\
	../AutoBuild.h		\
	../Cheats.cpp		\
	../Cheats.h		\
	../EEprom.cpp		\
	../EEprom.h		\
	../Flash.cpp		\
	../Flash.h		\
	../GBA.cpp		\
	../GBA.h		\
	../GBAinline.h		\
	../Gfx.cpp		\
	../Gfx.h		\
	../Globals.cpp		\
	../Globals.h		\
	../Mode0.cpp		\
	../Mode1.cpp		\
	../Mode2.cpp		\
	../Mode3.cpp		\
	../Mode4.cpp		\
	../Mode5.cpp		\
	../NLS.h		\
	../Port.h		\
	../RTC.cpp		\
	../RTC.h		\
	../Sound.cpp		\
	../Sound.h		\
	../Sram.cpp		\
	../Sram.h		\
	../System.h		\
	../Text.cpp		\
	../Text.h		\
	../Util.cpp		\
	../Util.h		\
	../admame.cpp		\
	../agbprint.cpp		\
	../agbprint.h		\
	../arm-new.h		\
	../armdis.cpp		\
	../armdis.h		\
	../bilinear.cpp		\
	../bios.cpp		\
	../bios.h		\
	../elf.cpp		\
	../elf.h		\
	../getopt.c		\
	../getopt.h		\
	../getopt1.c		\
	../hq2x.cpp		\
	../hq2x.h		\
	../interframe.cpp	\
	../interp.h		\
	../lq2x.h		\
	../memgzio.c		\
	../memgzio.h		\
	../motionblur.cpp	\
	../pixel.cpp		\
	../remote.cpp		\
	../scanline.cpp		\
	../simple2x.cpp		\
	../thumb.h

libgba_a_CPPFLAGS = -DSDL
libgba_a_CXXFLAGS = -fno-exceptions
dist_pkgdata_DATA = vba.glade
all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/gtk/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/gtk/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libgba.a: $(libgba_a_OBJECTS) $(libgba_a_DEPENDENCIES) $(EXTRA_libgba_a_DEPENDENCIES) 
	-rm -f libgba.a
	$(libgba_a_AR) libgba.a $(libgba_a_OBJECTS) $(libgba_a_LIBADD)
	$(RANLIB) libgba.a
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
gvba$(EXEEXT): $(gvba_OBJECTS) $(gvba_DEPENDENCIES) $(EXTRA_gvba_DEPENDENCIES) 
	@rm -f gvba$(EXEEXT)
	$(gvba_LINK) $(gvba_OBJECTS) $(gvba_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/gvba-configfile.Po
include ./$(DEPDIR)/gvba-filters.Po
include ./$(DEPDIR)/gvba-input.Po
include ./$(DEPDIR)/gvba-joypadconfig.Po
include ./$(DEPDIR)/gvba-main.Po
include ./$(DEPDIR)/gvba-screenarea.Po
include ./$(DEPDIR)/gvba-system.Po
include ./$(DEPDIR)/gvba-tools.Po
include ./$(DEPDIR)/gvba-window.Po
include ./$(DEPDIR)/gvba-windowcallbacks.Po
include ./$(DEPDIR)/libgba_a-2xSaI.Po
include ./$(DEPDIR)/libgba_a-Cheats.Po
include ./$(DEPDIR)/libgba_a-EEprom.Po
include ./$(DEPDIR)/libgba_a-Flash.Po
include ./$(DEPDIR)/libgba_a-GBA.Po
include ./$(DEPDIR)/libgba_a-Gfx.Po
include ./$(DEPDIR)/libgba_a-Globals.Po
include ./$(DEPDIR)/libgba_a-Mode0.Po
include ./$(DEPDIR)/libgba_a-Mode1.Po
include ./$(DEPDIR)/libgba_a-Mode2.Po
include ./$(DEPDIR)/libgba_a-Mode3.Po
include ./$(DEPDIR)/libgba_a-Mode4.Po
include ./$(DEPDIR)/libgba_a-Mode5.Po
include ./$(DEPDIR)/libgba_a-RTC.Po
include ./$(DEPDIR)/libgba_a-Sound.Po
include ./$(DEPDIR)/libgba_a-Sram.Po
include ./$(DEPDIR)/libgba_a-Text.Po
include ./$(DEPDIR)/libgba_a-Util.Po
include ./$(DEPDIR)/libgba_a-admame.Po
include ./$(DEPDIR)/libgba_a-agbprint.Po
include ./$(DEPDIR)/libgba_a-armdis.Po
include ./$(DEPDIR)/libgba_a-bilinear.Po
include ./$(DEPDIR)/libgba_a-bios.Po
include ./$(DEPDIR)/libgba_a-elf.Po
include ./$(DEPDIR)/libgba_a-getopt.Po
include ./$(DEPDIR)/libgba_a-getopt1.Po
include ./$(DEPDIR)/libgba_a-hq2x.Po
include ./$(DEPDIR)/libgba_a-interframe.Po
include ./$(DEPDIR)/libgba_a-memgzio.Po
include ./$(DEPDIR)/libgba_a-motionblur.Po
include ./$(DEPDIR)/libgba_a-pixel.Po
include ./$(DEPDIR)/libgba_a-remote.Po
include ./$(DEPDIR)/libgba_a-scanline.Po
include ./$(DEPDIR)/libgba_a-simple2x.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

libgba_a-getopt.o: ../getopt.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgba_a-getopt.o -MD -MP -MF $(DEPDIR)/libgba_a-getopt.Tpo -c -o libgba_a-getopt.o `test -f '../getopt.c' || echo '$(srcdir)/'`../getopt.c
	$(am__mv) $(DEPDIR)/libgba_a-getopt.Tpo $(DEPDIR)/libgba_a-getopt.Po
#	source='../getopt.c' object='libgba_a-getopt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgba_a-getopt.o `test -f '../getopt.c' || echo '$(srcdir)/'`../getopt.c

libgba_a-getopt.obj: ../getopt.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgba_a-getopt.obj -MD -MP -MF $(DEPDIR)/libgba_a-getopt.Tpo -c -o libgba_a-getopt.obj `if test -f '../getopt.c'; then $(CYGPATH_W) '../getopt.c'; else $(CYGPATH_W) '$(srcdir)/../getopt.c'; fi`
	$(am__mv) $(DEPDIR)/libgba_a-getopt.Tpo $(DEPDIR)/libgba_a-getopt.Po
#	source='../getopt.c' object='libgba_a-getopt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgba_a-getopt.obj `if test -f '../getopt.c'; then $(CYGPATH_W) '../getopt.c'; else $(CYGPATH_W) '$(srcdir)/../getopt.c'; fi`

libgba_a-getopt1.o: ../getopt1.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgba_a-getopt1.o -MD -MP -MF $(DEPDIR)/libgba_a-getopt1.Tpo -c -o libgba_a-getopt1.o `test -f '../getopt1.c' || echo '$(srcdir)/'`../getopt1.c
	$(am__mv) $(DEPDIR)/libgba_a-getopt1.Tpo $(DEPDIR)/libgba_a-getopt1.Po
#	source='../getopt1.c' object='libgba_a-getopt1.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgba_a-getopt1.o `test -f '../getopt1.c' || echo '$(srcdir)/'`../getopt1.c

libgba_a-getopt1.obj: ../getopt1.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgba_a-getopt1.obj -MD -MP -MF $(DEPDIR)/libgba_a-getopt1.Tpo -c -o libgba_a-getopt1.obj `if test -f '../getopt1.c'; then $(CYGPATH_W) '../getopt1.c'; else $(CYGPATH_W) '$(srcdir)/../getopt1.c'; fi`
	$(am__mv) $(DEPDIR)/libgba_a-getopt1.Tpo $(DEPDIR)/libgba_a-getopt1.Po
#	source='../getopt1.c' object='libgba_a-getopt1.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgba_a-getopt1.obj `if test -f '../getopt1.c'; then $(CYGPATH_W) '../getopt1.c'; else $(CYGPATH_W) '$(srcdir)/../getopt1.c'; fi`

libgba_a-memgzio.o: ../memgzio.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgba_a-memgzio.o -MD -MP -MF $(DEPDIR)/libgba_a-memgzio.Tpo -c -o libgba_a-memgzio.o `test -f '../memgzio.c' || echo '$(srcdir)/'`../memgzio.c
	$(am__mv) $(DEPDIR)/libgba_a-memgzio.Tpo $(DEPDIR)/libgba_a-memgzio.Po
#	source='../memgzio.c' object='libgba_a-memgzio.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgba_a-memgzio.o `test -f '../memgzio.c' || echo '$(srcdir)/'`../memgzio.c

libgba_a-memgzio.obj: ../memgzio.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libgba_a-memgzio.obj -MD -MP -MF $(DEPDIR)/libgba_a-memgzio.Tpo -c -o libgba_a-memgzio.obj `if test -f '../memgzio.c'; then $(CYGPATH_W) '../memgzio.c'; else $(CYGPATH_W) '$(srcdir)/../memgzio.c'; fi`
	$(am__mv) $(DEPDIR)/libgba_a-memgzio.Tpo $(DEPDIR)/libgba_a-memgzio.Po
#	source='../memgzio.c' object='libgba_a-memgzio.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libgba_a-memgzio.obj `if test -f '../memgzio.c'; then $(CYGPATH_W) '../memgzio.c'; else $(CYGPATH_W) '$(srcdir)/../memgzio.c'; fi`

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

libgba_a-2xSaI.o: ../2xSaI.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-2xSaI.o -MD -MP -MF $(DEPDIR)/libgba_a-2xSaI.Tpo -c -o libgba_a-2xSaI.o `test -f '../2xSaI.cpp' || echo '$(srcdir)/'`../2xSaI.cpp
	$(am__mv) $(DEPDIR)/libgba_a-2xSaI.Tpo $(DEPDIR)/libgba_a-2xSaI.Po
#	source='../2xSaI.cpp' object='libgba_a-2xSaI.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-2xSaI.o `test -f '../2xSaI.cpp' || echo '$(srcdir)/'`../2xSaI.cpp

libgba_a-2xSaI.obj: ../2xSaI.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-2xSaI.obj -MD -MP -MF $(DEPDIR)/libgba_a-2xSaI.Tpo -c -o libgba_a-2xSaI.obj `if test -f '../2xSaI.cpp'; then $(CYGPATH_W) '../2xSaI.cpp'; else $(CYGPATH_W) '$(srcdir)/../2xSaI.cpp'; fi`
	$(am__mv) $(DEPDIR)/libgba_a-2xSaI.Tpo $(DEPDIR)/libgba_a-2xSaI.Po
#	source='../2xSaI.cpp' object='libgba_a-2xSaI.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-2xSaI.obj `if test -f '../2xSaI.cpp'; then $(CYGPATH_W) '../2xSaI.cpp'; else $(CYGPATH_W) '$(srcdir)/../2xSaI.cpp'; fi`

libgba_a-Cheats.o: ../Cheats.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Cheats.o -MD -MP -MF $(DEPDIR)/libgba_a-Cheats.Tpo -c -o libgba_a-Cheats.o `test -f '../Cheats.cpp' || echo '$(srcdir)/'`../Cheats.cpp
	$(am__mv) $(DEPDIR)/libgba_a-Cheats.Tpo $(DEPDIR)/libgba_a-Cheats.Po
#	source='../Cheats.cpp' object='libgba_a-Cheats.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Cheats.o `test -f '../Cheats.cpp' || echo '$(srcdir)/'`../Cheats.cpp

libgba_a-Cheats.obj: ../Cheats.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Cheats.obj -MD -MP -MF $(DEPDIR)/libgba_a-Cheats.Tpo -c -o libgba_a-Cheats.obj `if test -f '../Cheats.cpp'; then $(CYGPATH_W) '../Cheats.cpp'; else $(CYGPATH_W) '$(srcdir)/../Cheats.cpp'; fi`
	$(am__mv) $(DEPDIR)/libgba_a-Cheats.Tpo $(DEPDIR)/libgba_a-Cheats.Po
#	source='../Cheats.cpp' object='libgba_a-Cheats.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Cheats.obj `if test -f '../Cheats.cpp'; then $(CYGPATH_W) '../Cheats.cpp'; else $(CYGPATH_W) '$(srcdir)/../Cheats.cpp'; fi`

libgba_a-EEprom.o: ../EEprom.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-EEprom.o -MD -MP -MF $(DEPDIR)/libgba_a-EEprom.Tpo -c -o libgba_a-EEprom.o `test -f '../EEprom.cpp' || echo '$(srcdir)/'`../EEprom.cpp
	$(am__mv) $(DEPDIR)/libgba_a-EEprom.Tpo $(DEPDIR)/libgba_a-EEprom.Po
#	source='../EEprom.cpp' object='libgba_a-EEprom.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-EEprom.o `test -f '../EEprom.cpp' || echo '$(srcdir)/'`../EEprom.cpp

libgba_a-EEprom.obj: ../EEprom.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-EEprom.obj -MD -MP -MF $(DEPDIR)/libgba_a-EEprom.Tpo -c -o libgba_a-EEprom.obj `if test -f '../EEprom.cpp'; then $(CYGPATH_W) '../EEprom.cpp'; else $(CYGPATH_W) '$(srcdir)/../EEprom.cpp'; fi`
	$(am__mv) $(DEPDIR)/libgba_a-EEprom.Tpo $(DEPDIR)/libgba_a-EEprom.Po
#	source='../EEprom.cpp' object='libgba_a-EEprom.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-EEprom.obj `if test -f '../EEprom.cpp'; then $(CYGPATH_W) '../EEprom.cpp'; else $(CYGPATH_W) '$(srcdir)/../EEprom.cpp'; fi`

libgba_a-Flash.o: ../Flash.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Flash.o -MD -MP -MF $(DEPDIR)/libgba_a-Flash.Tpo -c -o libgba_a-Flash.o `test -f '../Flash.cpp' || echo '$(srcdir)/'`../Flash.cpp
	$(am__mv) $(DEPDIR)/libgba_a-Flash.Tpo $(DEPDIR)/libgba_a-Flash.Po
#	source='../Flash.cpp' object='libgba_a-Flash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Flash.o `test -f '../Flash.cpp' || echo '$(srcdir)/'`../Flash.cpp

libgba_a-Flash.obj: ../Flash.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Flash.obj -MD -MP -MF $(DEPDIR)/libgba_a-Flash.Tpo -c -o libgba_a-Flash.obj `if test -f '../Flash.cpp'; then $(CYGPATH_W) '../Flash.cpp'; else $(CYGPATH_W) '$(srcdir)/../Flash.cpp'; fi`
	$(am__mv) $(DEPDIR)/libgba_a-Flash.Tpo $(DEPDIR)/libgba_a-Flash.Po
#	source='../Flash.cpp' object='libgba_a-Flash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Flash.obj `if test -f '../Flash.cpp'; then $(CYGPATH_W) '../Flash.cpp'; else $(CYGPATH_W) '$(srcdir)/../Flash.cpp'; fi`

libgba_a-GBA.o: ../GBA.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-GBA.o -MD -MP -MF $(DEPDIR)/libgba_a-GBA.Tpo -c -o libgba_a-GBA.o `test -f '../GBA.cpp' || echo '$(srcdir)/'`../GBA.cpp
	$(am__mv) $(DEPDIR)/libgba_a-GBA.Tpo $(DEPDIR)/libgba_a-GBA.Po
#	source='../GBA.cpp' object='libgba_a-GBA.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-GBA.o `test -f '../GBA.cpp' || echo '$(srcdir)/'`../GBA.cpp

libgba_a-GBA.obj: ../GBA.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-GBA.obj -MD -MP -MF $(DEPDIR)/libgba_a-GBA.Tpo -c -o libgba_a-GBA.obj `if test -f '../GBA.cpp'; then $(CYGPATH_W) '../GBA.cpp'; else $(CYGPATH_W) '$(srcdir)/../GBA.cpp'; fi`
	$(am__mv) $(DEPDIR)/libgba_a-GBA.Tpo $(DEPDIR)/libgba_a-GBA.Po
#	source='../GBA.cpp' object='libgba_a-GBA.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-GBA.obj `if test -f '../GBA.cpp'; then $(CYGPATH_W) '../GBA.cpp'; else $(CYGPATH_W) '$(srcdir)/../GBA.cpp'; fi`

libgba_a-Gfx.o: ../Gfx.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Gfx.o -MD -MP -MF $(DEPDIR)/libgba_a-Gfx.Tpo -c -o libgba_a-Gfx.o `test -f '../Gfx.cpp' || echo '$(srcdir)/'`../Gfx.cpp
	$(am__mv) $(DEPDIR)/libgba_a-Gfx.Tpo $(DEPDIR)/libgba_a-Gfx.Po
#	source='../Gfx.cpp' object='libgba_a-Gfx.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Gfx.o `test -f '../Gfx.cpp' || echo '$(srcdir)/'`../Gfx.cpp

libgba_a-Gfx.obj: ../Gfx.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Gfx.obj -MD -MP -MF $(DEPDIR)/libgba_a-Gfx.Tpo -c -o libgba_a-Gfx.obj `if test -f '../Gfx.cpp'; then $(CYGPATH_W) '../Gfx.cpp'; else $(CYGPATH_W) '$(srcdir)/../Gfx.cpp'; fi`
	$(am__mv) $(DEPDIR)/libgba_a-Gfx.Tpo $(DEPDIR)/libgba_a-Gfx.Po
#	source='../Gfx.cpp' object='libgba_a-Gfx.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Gfx.obj `if test -f '../Gfx.cpp'; then $(CYGPATH_W) '../Gfx.cpp'; else $(CYGPATH_W) '$(srcdir)/../Gfx.cpp'; fi`

libgba_a-Globals.o: ../Globals.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Globals.o -MD -MP -MF $(DEPDIR)/libgba_a-Globals.Tpo -c -o libgba_a-Globals.o `test -f '../Globals.cpp' || echo '$(srcdir)/'`../Globals.cpp
	$(am__mv) $(DEPDIR)/libgba_a-Globals.Tpo $(DEPDIR)/libgba_a-Globals.Po
#	source='../Globals.cpp' object='libgba_a-Globals.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Globals.o `test -f '../Globals.cpp' || echo '$(srcdir)/'`../Globals.cpp

libgba_a-Globals.obj: ../Globals.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Globals.obj -MD -MP -MF $(DEPDIR)/libgba_a-Globals.Tpo -c -o libgba_a-Globals.obj `if test -f '../Globals.cpp'; then $(CYGPATH_W) '../Globals.cpp'; else $(CYGPATH_W) '$(srcdir)/../Globals.cpp'; fi`
	$(am__mv) $(DEPDIR)/libgba_a-Globals.Tpo $(DEPDIR)/libgba_a-Globals.Po
#	source='../Globals.cpp' object='libgba_a-Globals.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Globals.obj `if test -f '../Globals.cpp'; then $(CYGPATH_W) '../Globals.cpp'; else $(CYGPATH_W) '$(srcdir)/../Globals.cpp'; fi`

libgba_a-Mode0.o: ../Mode0.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Mode0.o -MD -MP -MF $(DEPDIR)/libgba_a-Mode0.Tpo -c -o libgba_a-Mode0.o `test -f '../Mode0.cpp' || echo '$(srcdir)/'`../Mode0.cpp
	$(am__mv) $(DEPDIR)/libgba_a-Mode0.Tpo $(DEPDIR)/libgba_a-Mode0.Po
#	source='../Mode0.cpp' object='libgba_a-Mode0.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Mode0.o `test -f '../Mode0.cpp' || echo '$(srcdir)/'`../Mode0.cpp

libgba_a-Mode0.obj: ../Mode0.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Mode0.obj -MD -MP -MF $(DEPDIR)/libgba_a-Mode0.Tpo -c -o libgba_a-Mode0.obj `if test -f '../Mode0.cpp'; then $(CYGPATH_W) '../Mode0.cpp'; else $(CYGPATH_W) '$(srcdir)/../Mode0.cpp'; fi`
	$(am__mv) $(DEPDIR)/libgba_a-Mode0.Tpo $(DEPDIR)/libgba_a-Mode0.Po
#	source='../Mode0.cpp' object='libgba_a-Mode0.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Mode0.obj `if test -f '../Mode0.cpp'; then $(CYGPATH_W) '../Mode0.cpp'; else $(CYGPATH_W) '$(srcdir)/../Mode0.cpp'; fi`

libgba_a-Mode1.o: ../Mode1.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Mode1.o -MD -MP -MF $(DEPDIR)/libgba_a-Mode1.Tpo -c -o libgba_a-Mode1.o `test -f '../Mode1.cpp' || echo '$(srcdir)/'`../Mode1.cpp
	$(am__mv) $(DEPDIR)/libgba_a-Mode1.Tpo $(DEPDIR)/libgba_a-Mode1.Po
#	source='../Mode1.cpp' object='libgba_a-Mode1.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Mode1.o `test -f '../Mode1.cpp' || echo '$(srcdir)/'`../Mode1.cpp

libgba_a-Mode1.obj: ../Mode1.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Mode1.obj -MD -MP -MF $(DEPDIR)/libgba_a-Mode1.Tpo -c -o libgba_a-Mode1.obj `if test -f '../Mode1.cpp'; then $(CYGPATH_W) '../Mode1.cpp'; else $(CYGPATH_W) '$(srcdir)/../Mode1.cpp'; fi`
	$(am__mv) $(DEPDIR)/libgba_a-Mode1.Tpo $(DEPDIR)/libgba_a-Mode1.Po
#	source='../Mode1.cpp' object='libgba_a-Mode1.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Mode1.obj `if test -f '../Mode1.cpp'; then $(CYGPATH_W) '../Mode1.cpp'; else $(CYGPATH_W) '$(srcdir)/../Mode1.cpp'; fi`

libgba_a-Mode2.o: ../Mode2.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Mode2.o -MD -MP -MF $(DEPDIR)/libgba_a-Mode2.Tpo -c -o libgba_a-Mode2.o `test -f '../Mode2.cpp' || echo '$(srcdir)/'`../Mode2.cpp
	$(am__mv) $(DEPDIR)/libgba_a-Mode2.Tpo $(DEPDIR)/libgba_a-Mode2.Po
#	source='../Mode2.cpp' object='libgba_a-Mode2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Mode2.o `test -f '../Mode2.cpp' || echo '$(srcdir)/'`../Mode2.cpp

libgba_a-Mode2.obj: ../Mode2.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Mode2.obj -MD -MP -MF $(DEPDIR)/libgba_a-Mode2.Tpo -c -o libgba_a-Mode2.obj `if test -f '../Mode2.cpp'; then $(CYGPATH_W) '../Mode2.cpp'; else $(CYGPATH_W) '$(srcdir)/../Mode2.cpp'; fi`
	$(am__mv) $(DEPDIR)/libgba_a-Mode2.Tpo $(DEPDIR)/libgba_a-Mode2.Po
#	source='../Mode2.cpp' object='libgba_a-Mode2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Mode2.obj `if test -f '../Mode2.cpp'; then $(CYGPATH_W) '../Mode2.cpp'; else $(CYGPATH_W) '$(srcdir)/../Mode2.cpp'; fi`

libgba_a-Mode3.o: ../Mode3.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Mode3.o -MD -MP -MF $(DEPDIR)/libgba_a-Mode3.Tpo -c -o libgba_a-Mode3.o `test -f '../Mode3.cpp' || echo '$(srcdir)/'`../Mode3.cpp
	$(am__mv) $(DEPDIR)/libgba_a-Mode3.Tpo $(DEPDIR)/libgba_a-Mode3.Po
#	source='../Mode3.cpp' object='libgba_a-Mode3.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Mode3.o `test -f '../Mode3.cpp' || echo '$(srcdir)/'`../Mode3.cpp

libgba_a-Mode3.obj: ../Mode3.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Mode3.obj -MD -MP -MF $(DEPDIR)/libgba_a-Mode3.Tpo -c -o libgba_a-Mode3.obj `if test -f '../Mode3.cpp'; then $(CYGPATH_W) '../Mode3.cpp'; else $(CYGPATH_W) '$(srcdir)/../Mode3.cpp'; fi`
	$(am__mv) $(DEPDIR)/libgba_a-Mode3.Tpo $(DEPDIR)/libgba_a-Mode3.Po
#	source='../Mode3.cpp' object='libgba_a-Mode3.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Mode3.obj `if test -f '../Mode3.cpp'; then $(CYGPATH_W) '../Mode3.cpp'; else $(CYGPATH_W) '$(srcdir)/../Mode3.cpp'; fi`

libgba_a-Mode4.o: ../Mode4.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Mode4.o -MD -MP -MF $(DEPDIR)/libgba_a-Mode4.Tpo -c -o libgba_a-Mode4.o `test -f '../Mode4.cpp' || echo '$(srcdir)/'`../Mode4.cpp
	$(am__mv) $(DEPDIR)/libgba_a-Mode4.Tpo $(DEPDIR)/libgba_a-Mode4.Po
#	source='../Mode4.cpp' object='libgba_a-Mode4.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Mode4.o `test -f '../Mode4.cpp' || echo '$(srcdir)/'`../Mode4.cpp

libgba_a-Mode4.obj: ../Mode4.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Mode4.obj -MD -MP -MF $(DEPDIR)/libgba_a-Mode4.Tpo -c -o libgba_a-Mode4.obj `if test -f '../Mode4.cpp'; then $(CYGPATH_W) '../Mode4.cpp'; else $(CYGPATH_W) '$(srcdir)/../Mode4.cpp'; fi`
	$(am__mv) $(DEPDIR)/libgba_a-Mode4.Tpo $(DEPDIR)/libgba_a-Mode4.Po
#	source='../Mode4.cpp' object='libgba_a-Mode4.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Mode4.obj `if test -f '../Mode4.cpp'; then $(CYGPATH_W) '../Mode4.cpp'; else $(CYGPATH_W) '$(srcdir)/../Mode4.cpp'; fi`

libgba_a-Mode5.o: ../Mode5.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Mode5.o -MD -MP -MF $(DEPDIR)/libgba_a-Mode5.Tpo -c -o libgba_a-Mode5.o `test -f '../Mode5.cpp' || echo '$(srcdir)/'`../Mode5.cpp
	$(am__mv) $(DEPDIR)/libgba_a-Mode5.Tpo $(DEPDIR)/libgba_a-Mode5.Po
#	source='../Mode5.cpp' object='libgba_a-Mode5.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Mode5.o `test -f '../Mode5.cpp' || echo '$(srcdir)/'`../Mode5.cpp

libgba_a-Mode5.obj: ../Mode5.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Mode5.obj -MD -MP -MF $(DEPDIR)/libgba_a-Mode5.Tpo -c -o libgba_a-Mode5.obj `if test -f '../Mode5.cpp'; then $(CYGPATH_W) '../Mode5.cpp'; else $(CYGPATH_W) '$(srcdir)/../Mode5.cpp'; fi`
	$(am__mv) $(DEPDIR)/libgba_a-Mode5.Tpo $(DEPDIR)/libgba_a-Mode5.Po
#	source='../Mode5.cpp' object='libgba_a-Mode5.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Mode5.obj `if test -f '../Mode5.cpp'; then $(CYGPATH_W) '../Mode5.cpp'; else $(CYGPATH_W) '$(srcdir)/../Mode5.cpp'; fi`

libgba_a-RTC.o: ../RTC.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-RTC.o -MD -MP -MF $(DEPDIR)/libgba_a-RTC.Tpo -c -o libgba_a-RTC.o `test -f '../RTC.cpp' || echo '$(srcdir)/'`../RTC.cpp
	$(am__mv) $(DEPDIR)/libgba_a-RTC.Tpo $(DEPDIR)/libgba_a-RTC.Po
#	source='../RTC.cpp' object='libgba_a-RTC.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-RTC.o `test -f '../RTC.cpp' || echo '$(srcdir)/'`../RTC.cpp

libgba_a-RTC.obj: ../RTC.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-RTC.obj -MD -MP -MF $(DEPDIR)/libgba_a-RTC.Tpo -c -o libgba_a-RTC.obj `if test -f '../RTC.cpp'; then $(CYGPATH_W) '../RTC.cpp'; else $(CYGPATH_W) '$(srcdir)/../RTC.cpp'; fi`
	$(am__mv) $(DEPDIR)/libgba_a-RTC.Tpo $(DEPDIR)/libgba_a-RTC.Po
#	source='../RTC.cpp' object='libgba_a-RTC.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-RTC.obj `if test -f '../RTC.cpp'; then $(CYGPATH_W) '../RTC.cpp'; else $(CYGPATH_W) '$(srcdir)/../RTC.cpp'; fi`

libgba_a-Sound.o: ../Sound.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Sound.o -MD -MP -MF $(DEPDIR)/libgba_a-Sound.Tpo -c -o libgba_a-Sound.o `test -f '../Sound.cpp' || echo '$(srcdir)/'`../Sound.cpp
	$(am__mv) $(DEPDIR)/libgba_a-Sound.Tpo $(DEPDIR)/libgba_a-Sound.Po
#	source='../Sound.cpp' object='libgba_a-Sound.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Sound.o `test -f '../Sound.cpp' || echo '$(srcdir)/'`../Sound.cpp

libgba_a-Sound.obj: ../Sound.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Sound.obj -MD -MP -MF $(DEPDIR)/libgba_a-Sound.Tpo -c -o libgba_a-Sound.obj `if test -f '../Sound.cpp'; then $(CYGPATH_W) '../Sound.cpp'; else $(CYGPATH_W) '$(srcdir)/../Sound.cpp'; fi`
	$(am__mv) $(DEPDIR)/libgba_a-Sound.Tpo $(DEPDIR)/libgba_a-Sound.Po
#	source='../Sound.cpp' object='libgba_a-Sound.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Sound.obj `if test -f '../Sound.cpp'; then $(CYGPATH_W) '../Sound.cpp'; else $(CYGPATH_W) '$(srcdir)/../Sound.cpp'; fi`

libgba_a-Sram.o: ../Sram.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Sram.o -MD -MP -MF $(DEPDIR)/libgba_a-Sram.Tpo -c -o libgba_a-Sram.o `test -f '../Sram.cpp' || echo '$(srcdir)/'`../Sram.cpp
	$(am__mv) $(DEPDIR)/libgba_a-Sram.Tpo $(DEPDIR)/libgba_a-Sram.Po
#	source='../Sram.cpp' object='libgba_a-Sram.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Sram.o `test -f '../Sram.cpp' || echo '$(srcdir)/'`../Sram.cpp

libgba_a-Sram.obj: ../Sram.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Sram.obj -MD -MP -MF $(DEPDIR)/libgba_a-Sram.Tpo -c -o libgba_a-Sram.obj `if test -f '../Sram.cpp'; then $(CYGPATH_W) '../Sram.cpp'; else $(CYGPATH_W) '$(srcdir)/../Sram.cpp'; fi`
	$(am__mv) $(DEPDIR)/libgba_a-Sram.Tpo $(DEPDIR)/libgba_a-Sram.Po
#	source='../Sram.cpp' object='libgba_a-Sram.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Sram.obj `if test -f '../Sram.cpp'; then $(CYGPATH_W) '../Sram.cpp'; else $(CYGPATH_W) '$(srcdir)/../Sram.cpp'; fi`

libgba_a-Text.o: ../Text.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Text.o -MD -MP -MF $(DEPDIR)/libgba_a-Text.Tpo -c -o libgba_a-Text.o `test -f '../Text.cpp' || echo '$(srcdir)/'`../Text.cpp
	$(am__mv) $(DEPDIR)/libgba_a-Text.Tpo $(DEPDIR)/libgba_a-Text.Po
#	source='../Text.cpp' object='libgba_a-Text.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Text.o `test -f '../Text.cpp' || echo '$(srcdir)/'`../Text.cpp

libgba_a-Text.obj: ../Text.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Text.obj -MD -MP -MF $(DEPDIR)/libgba_a-Text.Tpo -c -o libgba_a-Text.obj `if test -f '../Text.cpp'; then $(CYGPATH_W) '../Text.cpp'; else $(CYGPATH_W) '$(srcdir)/../Text.cpp'; fi`
	$(am__mv) $(DEPDIR)/libgba_a-Text.Tpo $(DEPDIR)/libgba_a-Text.Po
#	source='../Text.cpp' object='libgba_a-Text.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Text.obj `if test -f '../Text.cpp'; then $(CYGPATH_W) '../Text.cpp'; else $(CYGPATH_W) '$(srcdir)/../Text.cpp'; fi`

libgba_a-Util.o: ../Util.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Util.o -MD -MP -MF $(DEPDIR)/libgba_a-Util.Tpo -c -o libgba_a-Util.o `test -f '../Util.cpp' || echo '$(srcdir)/'`../Util.cpp
	$(am__mv) $(DEPDIR)/libgba_a-Util.Tpo $(DEPDIR)/libgba_a-Util.Po
#	source='../Util.cpp' object='libgba_a-Util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Util.o `test -f '../Util.cpp' || echo '$(srcdir)/'`../Util.cpp

libgba_a-Util.obj: ../Util.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-Util.obj -MD -MP -MF $(DEPDIR)/libgba_a-Util.Tpo -c -o libgba_a-Util.obj `if test -f '../Util.cpp'; then $(CYGPATH_W) '../Util.cpp'; else $(CYGPATH_W) '$(srcdir)/../Util.cpp'; fi`
	$(am__mv) $(DEPDIR)/libgba_a-Util.Tpo $(DEPDIR)/libgba_a-Util.Po
#	source='../Util.cpp' object='libgba_a-Util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-Util.obj `if test -f '../Util.cpp'; then $(CYGPATH_W) '../Util.cpp'; else $(CYGPATH_W) '$(srcdir)/../Util.cpp'; fi`

libgba_a-admame.o: ../admame.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-admame.o -MD -MP -MF $(DEPDIR)/libgba_a-admame.Tpo -c -o libgba_a-admame.o `test -f '../admame.cpp' || echo '$(srcdir)/'`../admame.cpp
	$(am__mv) $(DEPDIR)/libgba_a-admame.Tpo $(DEPDIR)/libgba_a-admame.Po
#	source='../admame.cpp' object='libgba_a-admame.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-admame.o `test -f '../admame.cpp' || echo '$(srcdir)/'`../admame.cpp

libgba_a-admame.obj: ../admame.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-admame.obj -MD -MP -MF $(DEPDIR)/libgba_a-admame.Tpo -c -o libgba_a-admame.obj `if test -f '../admame.cpp'; then $(CYGPATH_W) '../admame.cpp'; else $(CYGPATH_W) '$(srcdir)/../admame.cpp'; fi`
	$(am__mv) $(DEPDIR)/libgba_a-admame.Tpo $(DEPDIR)/libgba_a-admame.Po
#	source='../admame.cpp' object='libgba_a-admame.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-admame.obj `if test -f '../admame.cpp'; then $(CYGPATH_W) '../admame.cpp'; else $(CYGPATH_W) '$(srcdir)/../admame.cpp'; fi`

libgba_a-agbprint.o: ../agbprint.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-agbprint.o -MD -MP -MF $(DEPDIR)/libgba_a-agbprint.Tpo -c -o libgba_a-agbprint.o `test -f '../agbprint.cpp' || echo '$(srcdir)/'`../agbprint.cpp
	$(am__mv) $(DEPDIR)/libgba_a-agbprint.Tpo $(DEPDIR)/libgba_a-agbprint.Po
#	source='../agbprint.cpp' object='libgba_a-agbprint.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-agbprint.o `test -f '../agbprint.cpp' || echo '$(srcdir)/'`../agbprint.cpp

libgba_a-agbprint.obj: ../agbprint.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-agbprint.obj -MD -MP -MF $(DEPDIR)/libgba_a-agbprint.Tpo -c -o libgba_a-agbprint.obj `if test -f '../agbprint.cpp'; then $(CYGPATH_W) '../agbprint.cpp'; else $(CYGPATH_W) '$(srcdir)/../agbprint.cpp'; fi`
	$(am__mv) $(DEPDIR)/libgba_a-agbprint.Tpo $(DEPDIR)/libgba_a-agbprint.Po
#	source='../agbprint.cpp' object='libgba_a-agbprint.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-agbprint.obj `if test -f '../agbprint.cpp'; then $(CYGPATH_W) '../agbprint.cpp'; else $(CYGPATH_W) '$(srcdir)/../agbprint.cpp'; fi`

libgba_a-armdis.o: ../armdis.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-armdis.o -MD -MP -MF $(DEPDIR)/libgba_a-armdis.Tpo -c -o libgba_a-armdis.o `test -f '../armdis.cpp' || echo '$(srcdir)/'`../armdis.cpp
	$(am__mv) $(DEPDIR)/libgba_a-armdis.Tpo $(DEPDIR)/libgba_a-armdis.Po
#	source='../armdis.cpp' object='libgba_a-armdis.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-armdis.o `test -f '../armdis.cpp' || echo '$(srcdir)/'`../armdis.cpp

libgba_a-armdis.obj: ../armdis.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-armdis.obj -MD -MP -MF $(DEPDIR)/libgba_a-armdis.Tpo -c -o libgba_a-armdis.obj `if test -f '../armdis.cpp'; then $(CYGPATH_W) '../armdis.cpp'; else $(CYGPATH_W) '$(srcdir)/../armdis.cpp'; fi`
	$(am__mv) $(DEPDIR)/libgba_a-armdis.Tpo $(DEPDIR)/libgba_a-armdis.Po
#	source='../armdis.cpp' object='libgba_a-armdis.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-armdis.obj `if test -f '../armdis.cpp'; then $(CYGPATH_W) '../armdis.cpp'; else $(CYGPATH_W) '$(srcdir)/../armdis.cpp'; fi`

libgba_a-bilinear.o: ../bilinear.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-bilinear.o -MD -MP -MF $(DEPDIR)/libgba_a-bilinear.Tpo -c -o libgba_a-bilinear.o `test -f '../bilinear.cpp' || echo '$(srcdir)/'`../bilinear.cpp
	$(am__mv) $(DEPDIR)/libgba_a-bilinear.Tpo $(DEPDIR)/libgba_a-bilinear.Po
#	source='../bilinear.cpp' object='libgba_a-bilinear.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-bilinear.o `test -f '../bilinear.cpp' || echo '$(srcdir)/'`../bilinear.cpp

libgba_a-bilinear.obj: ../bilinear.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-bilinear.obj -MD -MP -MF $(DEPDIR)/libgba_a-bilinear.Tpo -c -o libgba_a-bilinear.obj `if test -f '../bilinear.cpp'; then $(CYGPATH_W) '../bilinear.cpp'; else $(CYGPATH_W) '$(srcdir)/../bilinear.cpp'; fi`
	$(am__mv) $(DEPDIR)/libgba_a-bilinear.Tpo $(DEPDIR)/libgba_a-bilinear.Po
#	source='../bilinear.cpp' object='libgba_a-bilinear.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-bilinear.obj `if test -f '../bilinear.cpp'; then $(CYGPATH_W) '../bilinear.cpp'; else $(CYGPATH_W) '$(srcdir)/../bilinear.cpp'; fi`

libgba_a-bios.o: ../bios.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-bios.o -MD -MP -MF $(DEPDIR)/libgba_a-bios.Tpo -c -o libgba_a-bios.o `test -f '../bios.cpp' || echo '$(srcdir)/'`../bios.cpp
	$(am__mv) $(DEPDIR)/libgba_a-bios.Tpo $(DEPDIR)/libgba_a-bios.Po
#	source='../bios.cpp' object='libgba_a-bios.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-bios.o `test -f '../bios.cpp' || echo '$(srcdir)/'`../bios.cpp

libgba_a-bios.obj: ../bios.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-bios.obj -MD -MP -MF $(DEPDIR)/libgba_a-bios.Tpo -c -o libgba_a-bios.obj `if test -f '../bios.cpp'; then $(CYGPATH_W) '../bios.cpp'; else $(CYGPATH_W) '$(srcdir)/../bios.cpp'; fi`
	$(am__mv) $(DEPDIR)/libgba_a-bios.Tpo $(DEPDIR)/libgba_a-bios.Po
#	source='../bios.cpp' object='libgba_a-bios.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-bios.obj `if test -f '../bios.cpp'; then $(CYGPATH_W) '../bios.cpp'; else $(CYGPATH_W) '$(srcdir)/../bios.cpp'; fi`

libgba_a-elf.o: ../elf.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-elf.o -MD -MP -MF $(DEPDIR)/libgba_a-elf.Tpo -c -o libgba_a-elf.o `test -f '../elf.cpp' || echo '$(srcdir)/'`../elf.cpp
	$(am__mv) $(DEPDIR)/libgba_a-elf.Tpo $(DEPDIR)/libgba_a-elf.Po
#	source='../elf.cpp' object='libgba_a-elf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-elf.o `test -f '../elf.cpp' || echo '$(srcdir)/'`../elf.cpp

libgba_a-elf.obj: ../elf.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-elf.obj -MD -MP -MF $(DEPDIR)/libgba_a-elf.Tpo -c -o libgba_a-elf.obj `if test -f '../elf.cpp'; then $(CYGPATH_W) '../elf.cpp'; else $(CYGPATH_W) '$(srcdir)/../elf.cpp'; fi`
	$(am__mv) $(DEPDIR)/libgba_a-elf.Tpo $(DEPDIR)/libgba_a-elf.Po
#	source='../elf.cpp' object='libgba_a-elf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-elf.obj `if test -f '../elf.cpp'; then $(CYGPATH_W) '../elf.cpp'; else $(CYGPATH_W) '$(srcdir)/../elf.cpp'; fi`

libgba_a-hq2x.o: ../hq2x.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-hq2x.o -MD -MP -MF $(DEPDIR)/libgba_a-hq2x.Tpo -c -o libgba_a-hq2x.o `test -f '../hq2x.cpp' || echo '$(srcdir)/'`../hq2x.cpp
	$(am__mv) $(DEPDIR)/libgba_a-hq2x.Tpo $(DEPDIR)/libgba_a-hq2x.Po
#	source='../hq2x.cpp' object='libgba_a-hq2x.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-hq2x.o `test -f '../hq2x.cpp' || echo '$(srcdir)/'`../hq2x.cpp

libgba_a-hq2x.obj: ../hq2x.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-hq2x.obj -MD -MP -MF $(DEPDIR)/libgba_a-hq2x.Tpo -c -o libgba_a-hq2x.obj `if test -f '../hq2x.cpp'; then $(CYGPATH_W) '../hq2x.cpp'; else $(CYGPATH_W) '$(srcdir)/../hq2x.cpp'; fi`
	$(am__mv) $(DEPDIR)/libgba_a-hq2x.Tpo $(DEPDIR)/libgba_a-hq2x.Po
#	source='../hq2x.cpp' object='libgba_a-hq2x.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-hq2x.obj `if test -f '../hq2x.cpp'; then $(CYGPATH_W) '../hq2x.cpp'; else $(CYGPATH_W) '$(srcdir)/../hq2x.cpp'; fi`

libgba_a-interframe.o: ../interframe.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-interframe.o -MD -MP -MF $(DEPDIR)/libgba_a-interframe.Tpo -c -o libgba_a-interframe.o `test -f '../interframe.cpp' || echo '$(srcdir)/'`../interframe.cpp
	$(am__mv) $(DEPDIR)/libgba_a-interframe.Tpo $(DEPDIR)/libgba_a-interframe.Po
#	source='../interframe.cpp' object='libgba_a-interframe.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-interframe.o `test -f '../interframe.cpp' || echo '$(srcdir)/'`../interframe.cpp

libgba_a-interframe.obj: ../interframe.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-interframe.obj -MD -MP -MF $(DEPDIR)/libgba_a-interframe.Tpo -c -o libgba_a-interframe.obj `if test -f '../interframe.cpp'; then $(CYGPATH_W) '../interframe.cpp'; else $(CYGPATH_W) '$(srcdir)/../interframe.cpp'; fi`
	$(am__mv) $(DEPDIR)/libgba_a-interframe.Tpo $(DEPDIR)/libgba_a-interframe.Po
#	source='../interframe.cpp' object='libgba_a-interframe.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-interframe.obj `if test -f '../interframe.cpp'; then $(CYGPATH_W) '../interframe.cpp'; else $(CYGPATH_W) '$(srcdir)/../interframe.cpp'; fi`

libgba_a-motionblur.o: ../motionblur.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-motionblur.o -MD -MP -MF $(DEPDIR)/libgba_a-motionblur.Tpo -c -o libgba_a-motionblur.o `test -f '../motionblur.cpp' || echo '$(srcdir)/'`../motionblur.cpp
	$(am__mv) $(DEPDIR)/libgba_a-motionblur.Tpo $(DEPDIR)/libgba_a-motionblur.Po
#	source='../motionblur.cpp' object='libgba_a-motionblur.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-motionblur.o `test -f '../motionblur.cpp' || echo '$(srcdir)/'`../motionblur.cpp

libgba_a-motionblur.obj: ../motionblur.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-motionblur.obj -MD -MP -MF $(DEPDIR)/libgba_a-motionblur.Tpo -c -o libgba_a-motionblur.obj `if test -f '../motionblur.cpp'; then $(CYGPATH_W) '../motionblur.cpp'; else $(CYGPATH_W) '$(srcdir)/../motionblur.cpp'; fi`
	$(am__mv) $(DEPDIR)/libgba_a-motionblur.Tpo $(DEPDIR)/libgba_a-motionblur.Po
#	source='../motionblur.cpp' object='libgba_a-motionblur.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-motionblur.obj `if test -f '../motionblur.cpp'; then $(CYGPATH_W) '../motionblur.cpp'; else $(CYGPATH_W) '$(srcdir)/../motionblur.cpp'; fi`

libgba_a-pixel.o: ../pixel.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-pixel.o -MD -MP -MF $(DEPDIR)/libgba_a-pixel.Tpo -c -o libgba_a-pixel.o `test -f '../pixel.cpp' || echo '$(srcdir)/'`../pixel.cpp
	$(am__mv) $(DEPDIR)/libgba_a-pixel.Tpo $(DEPDIR)/libgba_a-pixel.Po
#	source='../pixel.cpp' object='libgba_a-pixel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-pixel.o `test -f '../pixel.cpp' || echo '$(srcdir)/'`../pixel.cpp

libgba_a-pixel.obj: ../pixel.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-pixel.obj -MD -MP -MF $(DEPDIR)/libgba_a-pixel.Tpo -c -o libgba_a-pixel.obj `if test -f '../pixel.cpp'; then $(CYGPATH_W) '../pixel.cpp'; else $(CYGPATH_W) '$(srcdir)/../pixel.cpp'; fi`
	$(am__mv) $(DEPDIR)/libgba_a-pixel.Tpo $(DEPDIR)/libgba_a-pixel.Po
#	source='../pixel.cpp' object='libgba_a-pixel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-pixel.obj `if test -f '../pixel.cpp'; then $(CYGPATH_W) '../pixel.cpp'; else $(CYGPATH_W) '$(srcdir)/../pixel.cpp'; fi`

libgba_a-remote.o: ../remote.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-remote.o -MD -MP -MF $(DEPDIR)/libgba_a-remote.Tpo -c -o libgba_a-remote.o `test -f '../remote.cpp' || echo '$(srcdir)/'`../remote.cpp
	$(am__mv) $(DEPDIR)/libgba_a-remote.Tpo $(DEPDIR)/libgba_a-remote.Po
#	source='../remote.cpp' object='libgba_a-remote.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-remote.o `test -f '../remote.cpp' || echo '$(srcdir)/'`../remote.cpp

libgba_a-remote.obj: ../remote.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-remote.obj -MD -MP -MF $(DEPDIR)/libgba_a-remote.Tpo -c -o libgba_a-remote.obj `if test -f '../remote.cpp'; then $(CYGPATH_W) '../remote.cpp'; else $(CYGPATH_W) '$(srcdir)/../remote.cpp'; fi`
	$(am__mv) $(DEPDIR)/libgba_a-remote.Tpo $(DEPDIR)/libgba_a-remote.Po
#	source='../remote.cpp' object='libgba_a-remote.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-remote.obj `if test -f '../remote.cpp'; then $(CYGPATH_W) '../remote.cpp'; else $(CYGPATH_W) '$(srcdir)/../remote.cpp'; fi`

libgba_a-scanline.o: ../scanline.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-scanline.o -MD -MP -MF $(DEPDIR)/libgba_a-scanline.Tpo -c -o libgba_a-scanline.o `test -f '../scanline.cpp' || echo '$(srcdir)/'`../scanline.cpp
	$(am__mv) $(DEPDIR)/libgba_a-scanline.Tpo $(DEPDIR)/libgba_a-scanline.Po
#	source='../scanline.cpp' object='libgba_a-scanline.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-scanline.o `test -f '../scanline.cpp' || echo '$(srcdir)/'`../scanline.cpp

libgba_a-scanline.obj: ../scanline.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-scanline.obj -MD -MP -MF $(DEPDIR)/libgba_a-scanline.Tpo -c -o libgba_a-scanline.obj `if test -f '../scanline.cpp'; then $(CYGPATH_W) '../scanline.cpp'; else $(CYGPATH_W) '$(srcdir)/../scanline.cpp'; fi`
	$(am__mv) $(DEPDIR)/libgba_a-scanline.Tpo $(DEPDIR)/libgba_a-scanline.Po
#	source='../scanline.cpp' object='libgba_a-scanline.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-scanline.obj `if test -f '../scanline.cpp'; then $(CYGPATH_W) '../scanline.cpp'; else $(CYGPATH_W) '$(srcdir)/../scanline.cpp'; fi`

libgba_a-simple2x.o: ../simple2x.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-simple2x.o -MD -MP -MF $(DEPDIR)/libgba_a-simple2x.Tpo -c -o libgba_a-simple2x.o `test -f '../simple2x.cpp' || echo '$(srcdir)/'`../simple2x.cpp
	$(am__mv) $(DEPDIR)/libgba_a-simple2x.Tpo $(DEPDIR)/libgba_a-simple2x.Po
#	source='../simple2x.cpp' object='libgba_a-simple2x.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-simple2x.o `test -f '../simple2x.cpp' || echo '$(srcdir)/'`../simple2x.cpp

libgba_a-simple2x.obj: ../simple2x.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -MT libgba_a-simple2x.obj -MD -MP -MF $(DEPDIR)/libgba_a-simple2x.Tpo -c -o libgba_a-simple2x.obj `if test -f '../simple2x.cpp'; then $(CYGPATH_W) '../simple2x.cpp'; else $(CYGPATH_W) '$(srcdir)/../simple2x.cpp'; fi`
	$(am__mv) $(DEPDIR)/libgba_a-simple2x.Tpo $(DEPDIR)/libgba_a-simple2x.Po
#	source='../simple2x.cpp' object='libgba_a-simple2x.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libgba_a_CPPFLAGS) $(CPPFLAGS) $(libgba_a_CXXFLAGS) $(CXXFLAGS) -c -o libgba_a-simple2x.obj `if test -f '../simple2x.cpp'; then $(CYGPATH_W) '../simple2x.cpp'; else $(CYGPATH_W) '$(srcdir)/../simple2x.cpp'; fi`

gvba-configfile.o: configfile.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -MT gvba-configfile.o -MD -MP -MF $(DEPDIR)/gvba-configfile.Tpo -c -o gvba-configfile.o `test -f 'configfile.cpp' || echo '$(srcdir)/'`configfile.cpp
	$(am__mv) $(DEPDIR)/gvba-configfile.Tpo $(DEPDIR)/gvba-configfile.Po
#	source='configfile.cpp' object='gvba-configfile.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -c -o gvba-configfile.o `test -f 'configfile.cpp' || echo '$(srcdir)/'`configfile.cpp

gvba-configfile.obj: configfile.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -MT gvba-configfile.obj -MD -MP -MF $(DEPDIR)/gvba-configfile.Tpo -c -o gvba-configfile.obj `if test -f 'configfile.cpp'; then $(CYGPATH_W) 'configfile.cpp'; else $(CYGPATH_W) '$(srcdir)/configfile.cpp'; fi`
	$(am__mv) $(DEPDIR)/gvba-configfile.Tpo $(DEPDIR)/gvba-configfile.Po
#	source='configfile.cpp' object='gvba-configfile.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -c -o gvba-configfile.obj `if test -f 'configfile.cpp'; then $(CYGPATH_W) 'configfile.cpp'; else $(CYGPATH_W) '$(srcdir)/configfile.cpp'; fi`

gvba-filters.o: filters.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -MT gvba-filters.o -MD -MP -MF $(DEPDIR)/gvba-filters.Tpo -c -o gvba-filters.o `test -f 'filters.cpp' || echo '$(srcdir)/'`filters.cpp
	$(am__mv) $(DEPDIR)/gvba-filters.Tpo $(DEPDIR)/gvba-filters.Po
#	source='filters.cpp' object='gvba-filters.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -c -o gvba-filters.o `test -f 'filters.cpp' || echo '$(srcdir)/'`filters.cpp

gvba-filters.obj: filters.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -MT gvba-filters.obj -MD -MP -MF $(DEPDIR)/gvba-filters.Tpo -c -o gvba-filters.obj `if test -f 'filters.cpp'; then $(CYGPATH_W) 'filters.cpp'; else $(CYGPATH_W) '$(srcdir)/filters.cpp'; fi`
	$(am__mv) $(DEPDIR)/gvba-filters.Tpo $(DEPDIR)/gvba-filters.Po
#	source='filters.cpp' object='gvba-filters.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -c -o gvba-filters.obj `if test -f 'filters.cpp'; then $(CYGPATH_W) 'filters.cpp'; else $(CYGPATH_W) '$(srcdir)/filters.cpp'; fi`

gvba-input.o: input.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -MT gvba-input.o -MD -MP -MF $(DEPDIR)/gvba-input.Tpo -c -o gvba-input.o `test -f 'input.cpp' || echo '$(srcdir)/'`input.cpp
	$(am__mv) $(DEPDIR)/gvba-input.Tpo $(DEPDIR)/gvba-input.Po
#	source='input.cpp' object='gvba-input.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -c -o gvba-input.o `test -f 'input.cpp' || echo '$(srcdir)/'`input.cpp

gvba-input.obj: input.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -MT gvba-input.obj -MD -MP -MF $(DEPDIR)/gvba-input.Tpo -c -o gvba-input.obj `if test -f 'input.cpp'; then $(CYGPATH_W) 'input.cpp'; else $(CYGPATH_W) '$(srcdir)/input.cpp'; fi`
	$(am__mv) $(DEPDIR)/gvba-input.Tpo $(DEPDIR)/gvba-input.Po
#	source='input.cpp' object='gvba-input.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -c -o gvba-input.obj `if test -f 'input.cpp'; then $(CYGPATH_W) 'input.cpp'; else $(CYGPATH_W) '$(srcdir)/input.cpp'; fi`

gvba-joypadconfig.o: joypadconfig.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -MT gvba-joypadconfig.o -MD -MP -MF $(DEPDIR)/gvba-joypadconfig.Tpo -c -o gvba-joypadconfig.o `test -f 'joypadconfig.cpp' || echo '$(srcdir)/'`joypadconfig.cpp
	$(am__mv) $(DEPDIR)/gvba-joypadconfig.Tpo $(DEPDIR)/gvba-joypadconfig.Po
#	source='joypadconfig.cpp' object='gvba-joypadconfig.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -c -o gvba-joypadconfig.o `test -f 'joypadconfig.cpp' || echo '$(srcdir)/'`joypadconfig.cpp

gvba-joypadconfig.obj: joypadconfig.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -MT gvba-joypadconfig.obj -MD -MP -MF $(DEPDIR)/gvba-joypadconfig.Tpo -c -o gvba-joypadconfig.obj `if test -f 'joypadconfig.cpp'; then $(CYGPATH_W) 'joypadconfig.cpp'; else $(CYGPATH_W) '$(srcdir)/joypadconfig.cpp'; fi`
	$(am__mv) $(DEPDIR)/gvba-joypadconfig.Tpo $(DEPDIR)/gvba-joypadconfig.Po
#	source='joypadconfig.cpp' object='gvba-joypadconfig.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -c -o gvba-joypadconfig.obj `if test -f 'joypadconfig.cpp'; then $(CYGPATH_W) 'joypadconfig.cpp'; else $(CYGPATH_W) '$(srcdir)/joypadconfig.cpp'; fi`

gvba-main.o: main.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -MT gvba-main.o -MD -MP -MF $(DEPDIR)/gvba-main.Tpo -c -o gvba-main.o `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp
	$(am__mv) $(DEPDIR)/gvba-main.Tpo $(DEPDIR)/gvba-main.Po
#	source='main.cpp' object='gvba-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -c -o gvba-main.o `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp

gvba-main.obj: main.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -MT gvba-main.obj -MD -MP -MF $(DEPDIR)/gvba-main.Tpo -c -o gvba-main.obj `if test -f 'main.cpp'; then $(CYGPATH_W) 'main.cpp'; else $(CYGPATH_W) '$(srcdir)/main.cpp'; fi`
	$(am__mv) $(DEPDIR)/gvba-main.Tpo $(DEPDIR)/gvba-main.Po
#	source='main.cpp' object='gvba-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -c -o gvba-main.obj `if test -f 'main.cpp'; then $(CYGPATH_W) 'main.cpp'; else $(CYGPATH_W) '$(srcdir)/main.cpp'; fi`

gvba-screenarea.o: screenarea.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -MT gvba-screenarea.o -MD -MP -MF $(DEPDIR)/gvba-screenarea.Tpo -c -o gvba-screenarea.o `test -f 'screenarea.cpp' || echo '$(srcdir)/'`screenarea.cpp
	$(am__mv) $(DEPDIR)/gvba-screenarea.Tpo $(DEPDIR)/gvba-screenarea.Po
#	source='screenarea.cpp' object='gvba-screenarea.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -c -o gvba-screenarea.o `test -f 'screenarea.cpp' || echo '$(srcdir)/'`screenarea.cpp

gvba-screenarea.obj: screenarea.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -MT gvba-screenarea.obj -MD -MP -MF $(DEPDIR)/gvba-screenarea.Tpo -c -o gvba-screenarea.obj `if test -f 'screenarea.cpp'; then $(CYGPATH_W) 'screenarea.cpp'; else $(CYGPATH_W) '$(srcdir)/screenarea.cpp'; fi`
	$(am__mv) $(DEPDIR)/gvba-screenarea.Tpo $(DEPDIR)/gvba-screenarea.Po
#	source='screenarea.cpp' object='gvba-screenarea.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -c -o gvba-screenarea.obj `if test -f 'screenarea.cpp'; then $(CYGPATH_W) 'screenarea.cpp'; else $(CYGPATH_W) '$(srcdir)/screenarea.cpp'; fi`

gvba-system.o: system.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -MT gvba-system.o -MD -MP -MF $(DEPDIR)/gvba-system.Tpo -c -o gvba-system.o `test -f 'system.cpp' || echo '$(srcdir)/'`system.cpp
	$(am__mv) $(DEPDIR)/gvba-system.Tpo $(DEPDIR)/gvba-system.Po
#	source='system.cpp' object='gvba-system.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -c -o gvba-system.o `test -f 'system.cpp' || echo '$(srcdir)/'`system.cpp

gvba-system.obj: system.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -MT gvba-system.obj -MD -MP -MF $(DEPDIR)/gvba-system.Tpo -c -o gvba-system.obj `if test -f 'system.cpp'; then $(CYGPATH_W) 'system.cpp'; else $(CYGPATH_W) '$(srcdir)/system.cpp'; fi`
	$(am__mv) $(DEPDIR)/gvba-system.Tpo $(DEPDIR)/gvba-system.Po
#	source='system.cpp' object='gvba-system.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -c -o gvba-system.obj `if test -f 'system.cpp'; then $(CYGPATH_W) 'system.cpp'; else $(CYGPATH_W) '$(srcdir)/system.cpp'; fi`

gvba-tools.o: tools.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -MT gvba-tools.o -MD -MP -MF $(DEPDIR)/gvba-tools.Tpo -c -o gvba-tools.o `test -f 'tools.cpp' || echo '$(srcdir)/'`tools.cpp
	$(am__mv) $(DEPDIR)/gvba-tools.Tpo $(DEPDIR)/gvba-tools.Po
#	source='tools.cpp' object='gvba-tools.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -c -o gvba-tools.o `test -f 'tools.cpp' || echo '$(srcdir)/'`tools.cpp

gvba-tools.obj: tools.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -MT gvba-tools.obj -MD -MP -MF $(DEPDIR)/gvba-tools.Tpo -c -o gvba-tools.obj `if test -f 'tools.cpp'; then $(CYGPATH_W) 'tools.cpp'; else $(CYGPATH_W) '$(srcdir)/tools.cpp'; fi`
	$(am__mv) $(DEPDIR)/gvba-tools.Tpo $(DEPDIR)/gvba-tools.Po
#	source='tools.cpp' object='gvba-tools.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -c -o gvba-tools.obj `if test -f 'tools.cpp'; then $(CYGPATH_W) 'tools.cpp'; else $(CYGPATH_W) '$(srcdir)/tools.cpp'; fi`

gvba-windowcallbacks.o: windowcallbacks.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -MT gvba-windowcallbacks.o -MD -MP -MF $(DEPDIR)/gvba-windowcallbacks.Tpo -c -o gvba-windowcallbacks.o `test -f 'windowcallbacks.cpp' || echo '$(srcdir)/'`windowcallbacks.cpp
	$(am__mv) $(DEPDIR)/gvba-windowcallbacks.Tpo $(DEPDIR)/gvba-windowcallbacks.Po
#	source='windowcallbacks.cpp' object='gvba-windowcallbacks.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -c -o gvba-windowcallbacks.o `test -f 'windowcallbacks.cpp' || echo '$(srcdir)/'`windowcallbacks.cpp

gvba-windowcallbacks.obj: windowcallbacks.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -MT gvba-windowcallbacks.obj -MD -MP -MF $(DEPDIR)/gvba-windowcallbacks.Tpo -c -o gvba-windowcallbacks.obj `if test -f 'windowcallbacks.cpp'; then $(CYGPATH_W) 'windowcallbacks.cpp'; else $(CYGPATH_W) '$(srcdir)/windowcallbacks.cpp'; fi`
	$(am__mv) $(DEPDIR)/gvba-windowcallbacks.Tpo $(DEPDIR)/gvba-windowcallbacks.Po
#	source='windowcallbacks.cpp' object='gvba-windowcallbacks.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -c -o gvba-windowcallbacks.obj `if test -f 'windowcallbacks.cpp'; then $(CYGPATH_W) 'windowcallbacks.cpp'; else $(CYGPATH_W) '$(srcdir)/windowcallbacks.cpp'; fi`

gvba-window.o: window.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -MT gvba-window.o -MD -MP -MF $(DEPDIR)/gvba-window.Tpo -c -o gvba-window.o `test -f 'window.cpp' || echo '$(srcdir)/'`window.cpp
	$(am__mv) $(DEPDIR)/gvba-window.Tpo $(DEPDIR)/gvba-window.Po
#	source='window.cpp' object='gvba-window.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -c -o gvba-window.o `test -f 'window.cpp' || echo '$(srcdir)/'`window.cpp

gvba-window.obj: window.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -MT gvba-window.obj -MD -MP -MF $(DEPDIR)/gvba-window.Tpo -c -o gvba-window.obj `if test -f 'window.cpp'; then $(CYGPATH_W) 'window.cpp'; else $(CYGPATH_W) '$(srcdir)/window.cpp'; fi`
	$(am__mv) $(DEPDIR)/gvba-window.Tpo $(DEPDIR)/gvba-window.Po
#	source='window.cpp' object='gvba-window.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gvba_CPPFLAGS) $(CPPFLAGS) $(gvba_CXXFLAGS) $(CXXFLAGS) -c -o gvba-window.obj `if test -f 'window.cpp'; then $(CYGPATH_W) 'window.cpp'; else $(CYGPATH_W) '$(srcdir)/window.cpp'; fi`
install-dist_pkgdataDATA: $(dist_pkgdata_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_pkgdata_DATA)'; test -n "$(pkgdatadir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgdatadir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgdatadir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgdatadir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgdatadir)" || exit $$?; \
	done

uninstall-dist_pkgdataDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_pkgdata_DATA)'; test -n "$(pkgdatadir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgdatadir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(RECURSIVE_TARGETS) $(RECURSIVE_CLEAN_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done
cscopelist-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) cscopelist); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

cscopelist: cscopelist-recursive $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS) $(LISP)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LIBRARIES) $(PROGRAMS) $(DATA)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(pkgdatadir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-noinstLIBRARIES \
	mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-dist_pkgdataDATA

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-dist_pkgdataDATA

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) \
	cscopelist-recursive ctags-recursive install-am install-strip \
	tags-recursive

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-noinstLIBRARIES cscopelist \
	cscopelist-recursive ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am \
	install-dist_pkgdataDATA install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags tags-recursive uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-dist_pkgdataDATA


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
